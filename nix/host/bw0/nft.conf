define local_ifs = {"eth_l_wired", "eth_l_wifi"};
define up_ifs = {"eth_wan0", "eth_wan1"}; #, "tun6_0", "tun6_1"};
define black_ips = {10.17.1.2};

flush ruleset;

table inet filter0 {
	counter i_eth_lan {};
	counter i_eth_up0 {};
	counter i_eth_up1 {};
	counter i_eth_l_wired {};
	counter i_eth_l_wifi {};

	counter o_eth_lan {};
	counter o_eth_up0 {};
	counter o_eth_up1 {};
	counter o_eth_l_wired {};
	counter o_eth_l_wifi {};

        ## Type counters
	# up_0
	counter i/up_0/ssh {};
	counter i/up_0/http {};
	counter i/up_0/https {};
	counter i/up_0/cryptoc {};
	counter i/up_0/tcp_other {};

	counter i/up_0/dns {};
	counter i/up_0/openvpn {};
	counter i/up_0/udp_other {};
	counter i/up_0/ip_other {};

	counter o/up_0/ssh {};
	counter o/up_0/http {};
	counter o/up_0/https {};
	counter o/up_0/cryptoc {};
	counter o/up_0/tcp_other {};
	counter o/up_0/dns {};
	counter o/up_0/openvpn {};
	counter o/up_0/udp_other {};
	counter o/up_0/ip_other {};

	# up_1
	counter i/up_1/ssh {};
	counter i/up_1/http {};
	counter i/up_1/https {};
	counter i/up_1/cryptoc {};
	counter i/up_1/tcp_other {};

	counter i/up_1/dns {};
	counter i/up_1/openvpn {};
	counter i/up_1/udp_other {};
	counter i/up_1/ip_other {};

	counter o/up_1/ssh {};
	counter o/up_1/http {};
	counter o/up_1/https {};
	counter o/up_1/cryptoc {};
	counter o/up_1/tcp_other {};
	counter o/up_1/dns {};
	counter o/up_1/openvpn {};
	counter o/up_1/udp_other {};
	counter o/up_1/ip_other {};

	# Counter hooks
        chain preroute {
	      type filter hook prerouting priority -1024;
	      counter name iif map { "eth_wan0": i_eth_up0, "eth_wan1": i_eth_up1, "eth_l_wired": i_eth_l_wired, "eth_l_wifi": i_eth_l_wifi };
	      iif vmap {"eth_wan0": jump i/up_0, "eth_wan1": jump i/up_1};
	}
	chain postroute {
	      type filter hook postrouting priority 1024;
	      counter name oif map { "eth_wan0": o_eth_up0, "eth_wan1": i_eth_up1, "eth_l_wired": o_eth_l_wired, "eth_l_wifi": o_eth_l_wifi };
	      oif vmap {"eth_wan0": jump o/up_0, "eth_wan1": jump o/up_1};
	}

	# Type counter chains
	chain i/up_0 {
	      counter name tcp sport map { 22:i/up_0/ssh, 80: i/up_0/http, 443: i/up_0/https, 53: i/up_0/dns, 30303: i/up_0/cryptoc } return;
	      ip protocol tcp counter name i/up_0/tcp_other return;
	      counter name udp sport map { 53: i/up_0/dns, 80: i/up_0/http, 443:i/up_0/https, 1194: i/up_0/openvpn, 1195: i/up_0/openvpn, 1196: i/up_0/openvpn, 1197: i/up_0/openvpn, 1210: i/up_0/openvpn } return;
	      ip protocol udp counter name i/up_0/tcp_other return;
	      counter name i/up_0/ip_other return;
	}
	chain o/up_0 {
	      counter name tcp dport map { 22:o/up_0/ssh, 80: o/up_0/http, 443: o/up_0/https, 53: o/up_0/dns, 30303: o/up_0/cryptoc } return;
	      ip protocol tcp counter name o/up_0/tcp_other return;
	      counter name udp dport map { 53: o/up_0/dns, 80: o/up_0/http, 443:o/up_0/https, 1194: o/up_0/openvpn, 1195: o/up_0/openvpn, 1196: o/up_0/openvpn, 1197: o/up_0/openvpn, 1210: o/up_0/openvpn } return;
	      ip protocol udp counter name o/up_0/udp_other return;
	      counter name o/up_0/ip_other return;
	}

	chain i/up_1 {
	      counter name tcp sport map { 22:i/up_1/ssh, 80: i/up_1/http, 443: i/up_1/https, 53: i/up_1/dns, 30303: i/up_1/cryptoc } return;
	      ip protocol tcp counter name i/up_1/tcp_other return;
	      counter name udp sport map { 53: i/up_1/dns, 80: i/up_1/http, 443:i/up_1/https, 1194: i/up_1/openvpn, 1195: i/up_1/openvpn, 1196: i/up_1/openvpn, 1197: i/up_1/openvpn, 1210: i/up_1/openvpn } return;
	      ip protocol udp counter name i/up_1/tcp_other return;
	      counter name i/up_1/ip_other return;
	}
	chain o/up_1 {
	      counter name tcp dport map { 22:o/up_1/ssh, 80: o/up_1/http, 443: o/up_1/https, 53: o/up_1/dns, 30303: o/up_1/cryptoc } return;
	      ip protocol tcp counter name o/up_1/tcp_other return;
	      counter name udp dport map { 53: o/up_1/dns, 80: o/up_1/http, 443:o/up_1/https, 1194: o/up_1/openvpn, 1195: o/up_1/openvpn, 1196: o/up_1/openvpn, 1197: o/up_1/openvpn, 1210: o/up_1/openvpn } return;
	      ip protocol udp counter name o/up_1/udp_other return;
	      counter name o/up_1/ip_other return;
	}

	chain a_input {
	      type filter hook input priority 0; policy accept;
	      iif $up_ifs counter goto ext_in
	}

        chain a_output {
              type filter hook output priority 0; policy accept;
        }

        chain a_forward {
              type filter hook forward priority 0; policy accept;
              oif $up_ifs ip saddr $black_ips drop;
        }

        chain ext_in {
              ip protocol icmp icmp type { echo-request, destination-unreachable, time-exceeded, parameter-problem} counter accept
              meta l4proto ipv6-icmp icmpv6 type { nd-neighbor-solicit, packet-too-big, nd-neighbor-advert, destination-unreachable, nd-router-advert, time-exceeded, echo-request} counter accept
              counter jump notnew
        }

        chain notnew {
              ct state { established, related} accept
              jump block
        }

        chain block {
              meta l4proto tcp counter reject with tcp reset
              counter reject
              counter drop
        }
}
table ip nat {
        chain postrouting {
              type nat hook postrouting priority 0; policy accept;
              oif $up_ifs masquerade
        }

        chain prerouting {
              type nat hook prerouting priority 0; policy accept;
              # echo-chonk: 10.17.1.9
              iif $up_ifs dnat tcp dport map { 4242: 10.17.1.9 };
              iif $up_ifs dnat udp dport map { 60000-61000: 10.17.1.9};
              # udp dport 1234 dnat 10.17.1.200
        }
}
table ip6 nat {
        chain postrouting {
              type nat hook postrouting priority 0; policy accept;
              #oif $up_ifs masquerade
        }
}
